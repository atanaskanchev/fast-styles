"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[804],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(t),m=i,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[d]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9913:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const a={sidebar_position:3,description:"Responsive design with media queries"},o="Responsiveness",s={unversionedId:"advanced/media-queries",id:"advanced/media-queries",title:"Responsiveness",description:"Responsive design with media queries",source:"@site/docs/advanced/media-queries.md",sourceDirName:"advanced",slug:"/advanced/media-queries",permalink:"/fast-styles/docs/advanced/media-queries",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Responsive design with media queries"},sidebar:"mainSidebar",previous:{title:"Modes",permalink:"/fast-styles/docs/advanced/modes"},next:{title:"Plugin Rules",permalink:"/fast-styles/docs/advanced/plugin-rules"}},c={},l=[],p={toc:l},d="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"responsiveness"},"Responsiveness"),(0,i.kt)("p",null,"Since Fast Styles follows a ",(0,i.kt)("strong",{parentName:"p"},"variant-oriented")," concept and aims to provide optimal performance, we deliberately avoid adding any extra logic to each styled component by design. However, using responsive designs is essential, so we offer an example of how to achieve this using this library."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"First, you need to create a hook that listens for screen dimension changes.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="use-screen-dimensions.js"',title:'"use-screen-dimensions.js"'},'// Here\'s a basic example that you can adapt to your needs.\nconst useScreenDimensions = () => {\n  const [screenData, setScreenData] = useState(Dimensions.get("screen"));\n\n  useEffect(() => {\n    const onChange = (result) => {\n      setScreenData(result.screen);\n    };\n\n    Dimensions.addEventListener("change", onChange);\n\n    return () => Dimensions.removeEventListener("change", onChange);\n  });\n\n  return {\n    ...screenData,\n    isLandscape: screenData.width > screenData.height,\n  };\n};\n')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Just like how we applied light/dark mode conditionally, we can also apply other variants based on screen width:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="responsive-component.js"',title:'"responsive-component.js"'},'const Layout = styled(TouchableOpacity, {\n  display: "flex",\n  gap: 10,\n  variants: {\n    orientation: {\n      vertical: {\n        padding: 4,\n        flexDirection: "column",\n      },\n      horizontal: {\n        padding: 8,\n        flexDirection: "row",\n      },\n    },\n  },\n});\n\nconst App = () => {\n  const { width } = useScreenDimensions();\n  const orientation = width < 480 ? "vertical" : "horizontal";\n\n  return <Layout orientation={orientation} />;\n};\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"In the near future, we could consider adding this functionality as part of the library, providing tools to simplify its usage. This would allow developers to easily implement responsive designs in their applications without the need for additional complex configurations.")))}u.isMDXComponent=!0}}]);