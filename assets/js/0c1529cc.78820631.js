"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[58],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(r),u=n,m=d["".concat(l,".").concat(u)]||d[u]||h[u]||s;return r?a.createElement(m,o(o({ref:t},c),{},{components:r})):a.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:n,o[1]=i;for(var p=2;p<s;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5995:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>u,default:()=>b,frontMatter:()=>h,metadata:()=>m,toc:()=>g});var a=r(7462),n=(r(7294),r(3905)),s=r(941);r(4996);const o=r.p+"assets/images/tree-cbe1a8366c46e69177817021eff4af2a.png",i=r.p+"assets/images/tree-dark-97d6403f5e92fc907aeb54a0958e3e62.png",l=r.p+"assets/images/traverse-6fd56dbb68b822fe4e257be25d13344d.png",p=r.p+"assets/images/traverse-dark-ad05e2c6894db23a950d5c66e4b0fbd2.png",c=r.p+"assets/images/stylemap-3182a2cca7e096576fafc4f9edc17178.png",d=r.p+"assets/images/stylemap-dark-01c26e6079b4231c066b980c2916615d.png",h={sidebar_position:5,description:"Understanding the process"},u="How it works",m={unversionedId:"advanced/how-it-works",id:"advanced/how-it-works",title:"How it works",description:"Understanding the process",source:"@site/docs/advanced/how-it-works.mdx",sourceDirName:"advanced",slug:"/advanced/how-it-works",permalink:"/fast-styles/docs/advanced/how-it-works",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Understanding the process"},sidebar:"mainSidebar",previous:{title:"Philosophy",permalink:"/fast-styles/docs/advanced/philosophy"},next:{title:"API Reference",permalink:"/fast-styles/docs/api-reference"}},f={},g=[{value:"1. Variant Tree",id:"1-variant-tree",level:3},{value:"2. Traverse the tree",id:"2-traverse-the-tree",level:3},{value:"3. Building the stylemap",id:"3-building-the-stylemap",level:3}],y={toc:g},v="wrapper";function b(e){let{components:t,...r}=e;return(0,n.kt)(v,(0,a.Z)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"how-it-works"},"How it works"),(0,n.kt)("p",null,"The working principle of Fast Styles involves generating a ",(0,n.kt)("strong",{parentName:"p"},"style map")," when the styled hoc is called.\nThis approach saves a lot of time during component rendering, as all the variants are generated and stored in the ",(0,n.kt)("strong",{parentName:"p"},"style map object")," of that component.\nIf you use the Babel plugin, these calculations are performed during transpilation, minimizing runtime overhead."),(0,n.kt)("p",null,"Next, we will briefly describe how the style map generation works."),(0,n.kt)("h3",{id:"1-variant-tree"},"1. Variant Tree"),(0,n.kt)("p",null,"Conceptually, we should understand the possible variants of a component as a tree,\nwhere the leaves of each level are the possible options for each variant."),(0,n.kt)(s.Z,{alt:"tree",width:700,sources:{light:o,dark:i},mdxType:"ThemedImage"}),(0,n.kt)("h3",{id:"2-traverse-the-tree"},"2. Traverse the tree"),(0,n.kt)("p",null,"Generating the ",(0,n.kt)("strong",{parentName:"p"},"style map")," is as simple as traversing each branch of the tree to the last level, accumulating the styles of each variant along the way."),(0,n.kt)("p",null,"As the tree is traversed, an array is stored with the path, containing each option in that traversal. This array is useful for searching and applying rules defined in the ",(0,n.kt)("strong",{parentName:"p"},"compound variants"),"."),(0,n.kt)(s.Z,{alt:"traverse",width:500,sources:{light:l,dark:p},mdxType:"ThemedImage"}),(0,n.kt)("h3",{id:"3-building-the-stylemap"},"3. Building the stylemap"),(0,n.kt)("p",null,"Every time the last level is reached, an entry is added to the ",(0,n.kt)("strong",{parentName:"p"},"style map"),", recording the compound styles for that configuration."),(0,n.kt)(s.Z,{alt:"stylemap",width:500,sources:{light:c,dark:d},mdxType:"ThemedImage"}),";")}b.isMDXComponent=!0}}]);